
==================== FINAL INTERFACE ====================
2018-03-09 08:08:53.253238 UTC

interface tools_3VVSfwRhtQOBrJAbe7B7f3:ToolShed.Data.Quadruple 7103
  interface hash: 13146f622f9180e0a2d37c5b19b34eac
  ABI hash: dd8b34c454c102d0869fca7bc422e53b
  export-list hash: 83e966535a6835c8fc4fbc77fd409ed8
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 9870f41b8ad9b30ee93550d6a576396c
  sig of: Nothing
  used TH splices: False
  where
exports:
  ToolShed.Data.Quadruple.curry4
  ToolShed.Data.Quadruple.getFirst
  ToolShed.Data.Quadruple.getFourth
  ToolShed.Data.Quadruple.getSecond
  ToolShed.Data.Quadruple.getThird
  ToolShed.Data.Quadruple.uncurry4
module dependencies:
package dependencies: base-4.8.2.0* ghc-prim-0.4.0.0
                      integer-gmp-1.0.0.0
orphans: base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
family instance modules: base-4.8.2.0:Control.Applicative
                         base-4.8.2.0:Data.Either base-4.8.2.0:Data.Monoid
                         base-4.8.2.0:Data.Type.Equality base-4.8.2.0:GHC.Generics
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
8343c166a4504faa0c0f71e4dd1e4ba1
  curry4 :: ((a, b, c, d) -> result) -> a -> b -> c -> d -> result
  {- Arity: 5, HasNoCafRefs,
     Strictness: <C(S),1*C1(U)><L,U><L,U><L,U><L,U>,
     Unfolding: InlineRule (5, True, False)
                (\ @ a
                   @ b
                   @ c
                   @ d
                   @ result
                   f :: (a, b, c, d) -> result
                   a1 :: a
                   b1 :: b
                   c1 :: c
                   d1 :: d ->
                 f (a1, b1, c1, d1)) -}
ed1066665bc7850578913bea567344f6
  getFirst :: (a, b, c, d) -> a
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLLL),1*U(1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a @ b @ c @ d ds :: (a, b, c, d) ->
                 case ds of wild { (,,,) a1 ds1 ds2 ds3 -> a1 }) -}
88f6a233d39eb144a18dfbfb6ea1b8b4
  getFourth :: (a, b, c, d) -> d
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLS),1*U(A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a @ b @ c @ d ds :: (a, b, c, d) ->
                 case ds of wild { (,,,) ds1 ds2 ds3 d1 -> d1 }) -}
c8f3e15a7af2acef7f367517d5574d66
  getSecond :: (a, b, c, d) -> b
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSLL),1*U(A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a @ b @ c @ d ds :: (a, b, c, d) ->
                 case ds of wild { (,,,) ds1 b1 ds2 ds3 -> b1 }) -}
453cf9c06fa70b45eb4185be8d0f7084
  getThird :: (a, b, c, d) -> c
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLSL),1*U(A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a @ b @ c @ d ds :: (a, b, c, d) ->
                 case ds of wild { (,,,) ds1 ds2 c1 ds3 -> c1 }) -}
c63b75db4b2a7bc7e93385732a1ddbe3
  uncurry4 :: (a -> b -> c -> d -> result) -> (a, b, c, d) -> result
  {- Arity: 2, HasNoCafRefs,
     Strictness: <C(C(C(C(S)))),1*C1(C1(C1(C1(U))))><S,1*U(U,U,U,U)>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   @ b
                   @ c
                   @ d
                   @ result
                   f :: a -> b -> c -> d -> result
                   ds :: (a, b, c, d) ->
                 case ds of wild { (,,,) a1 b1 c1 d1 -> f a1 b1 c1 d1 }) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

