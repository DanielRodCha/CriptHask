
==================== FINAL INTERFACE ====================
2018-03-09 08:08:50.275515 UTC

interface tools_3VVSfwRhtQOBrJAbe7B7f3:ToolShed.Test.ReversibleBoundedEnum 7103
  interface hash: 94a7de8732d17960bc2a8565845a1bd9
  ABI hash: 17cf67dad71c2eb9be770e38cbca3996
  export-list hash: 1c71eeca1383fbb7e9ce54d6d971a2b4
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 9e6213d5192d6268168c9fb033f63485
  sig of: Nothing
  used TH splices: False
  where
exports:
  ToolShed.Test.ReversibleBoundedEnum.isReversible
module dependencies:
package dependencies: base-4.8.2.0* ghc-prim-0.4.0.0
                      integer-gmp-1.0.0.0
orphans: base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
family instance modules: base-4.8.2.0:Control.Applicative
                         base-4.8.2.0:Data.Either base-4.8.2.0:Data.Monoid
                         base-4.8.2.0:Data.Type.Equality base-4.8.2.0:GHC.Generics
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:GHC.Enum debc6de3086023a15993ab0cecffb90b
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  ghc-prim-0.4.0.0:GHC.Classes e1f4ff80f7b5262008a595d29986fb18
7b5c96fe09a733dc9779edf855e37e79
  isReversible ::
    (GHC.Enum.Bounded r, GHC.Classes.Eq r, GHC.Enum.Enum r) =>
    r -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,1*U(1*U,A)><S(C(C(S))L),U(C(C1(U)),A)><L,U(1*C1(U),1*C1(U),A,A,A,A,A,A)><L,U>,
     Unfolding: (\ @ r
                   $dBounded :: GHC.Enum.Bounded r
                   $dEq :: GHC.Classes.Eq r
                   $dEnum :: GHC.Enum.Enum r
                   r1 :: r ->
                 case GHC.Classes.==
                        @ r
                        $dEq
                        r1
                        (GHC.Enum.minBound @ r $dBounded) of wild {
                   GHC.Types.False
                   -> GHC.Classes.==
                        @ r
                        $dEq
                        (GHC.Enum.succ @ r $dEnum (GHC.Enum.pred @ r $dEnum r1))
                        r1
                   GHC.Types.True
                   -> GHC.Classes.==
                        @ r
                        $dEq
                        (GHC.Enum.pred @ r $dEnum (GHC.Enum.succ @ r $dEnum r1))
                        r1 }) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

