
==================== FINAL INTERFACE ====================
2018-03-09 08:08:49.97763 UTC

interface tools_3VVSfwRhtQOBrJAbe7B7f3:ToolShed.Test.ReversibleIO 7103
  interface hash: cc3c5752972fef40db5c32cd61d965e8
  ABI hash: a9bc72f628206812d9a823411c110eb3
  export-list hash: 65f2672f48bb98e23d12d9fb2ede585e
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 9e6213d5192d6268168c9fb033f63485
  sig of: Nothing
  used TH splices: False
  where
exports:
  ToolShed.Test.ReversibleIO.isReversible
module dependencies:
package dependencies: base-4.8.2.0* ghc-prim-0.4.0.0
                      integer-gmp-1.0.0.0
orphans: base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
family instance modules: base-4.8.2.0:Control.Applicative
                         base-4.8.2.0:Data.Either base-4.8.2.0:Data.Monoid
                         base-4.8.2.0:Data.Type.Equality base-4.8.2.0:GHC.Generics
import  -/  base-4.8.2.0:GHC.Read b423b4506a014855edbd329b567629f3
import  -/  base-4.8.2.0:GHC.Show 0e1d8380a8fb0cfb07ebeda3b70cbf38
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  base-4.8.2.0:Text.Read ef0ef92fb7358ae94bab089940adfd2a
import  -/  ghc-prim-0.4.0.0:GHC.Classes e1f4ff80f7b5262008a595d29986fb18
e1f70345977b1001496ba9140f49ebfa
  isReversible ::
    (GHC.Classes.Eq r, GHC.Read.Read r, GHC.Show.Show r) =>
    r -> GHC.Types.Bool
  {- Arity: 4,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*U(A,A,1*C1(C1(U)),A)><L,1*U(A,1*C1(U),A)><L,U>,
     Unfolding: (\ @ r
                   $dEq :: GHC.Classes.Eq r
                   $dRead :: GHC.Read.Read r
                   $dShow :: GHC.Show.Show r
                   r1 :: r ->
                 GHC.Classes.==
                   @ r
                   $dEq
                   (case Text.Read.readEither6
                           @ r
                           (Text.ParserCombinators.ReadP.run
                              @ r
                              (((GHC.Read.readPrec @ r $dRead)
                                  `cast`
                                (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0] <r>_R)
                                  Text.ParserCombinators.ReadPrec.minPrec)
                                 `cast`
                               (Text.ParserCombinators.ReadP.NTCo:ReadP[0] <r>_R)
                                 @ r
                                 (Text.Read.readEither5 @ r))
                              (GHC.Show.show @ r $dShow r1)) of wild {
                      [] -> ToolShed.Test.ReversibleIO.isReversible2 @ r
                      : x ds
                      -> case ds of wild1 {
                           [] -> x
                           : ipv ipv1 -> ToolShed.Test.ReversibleIO.isReversible1 @ r } })
                   r1) -}
12040ebf0f2fe7ba006c6984ef145f98
  isReversible1 :: r
  {- Strictness: b -}
360219501187186f962ae86688baf02b
  isReversible2 :: r
  {- Strictness: b -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

